#!/usr/bin/env groovy

import groovy.json.JsonSlurperClassic

def newtag
def dockerImage
def dockertag
def config

pipeline {
  agent any

  stages {
    stage('build container') {
      steps {
        script {
          // configtxt = sh(returnStdout: true, script: "cat ${WORKSPACE}/config.json")
          // config = new JsonSlurperClassic().parseText(configtxt)
          oldnr = sh returnStdout: true, script: 'git tag --list|sort -n|tail -1'
          newtag = oldnr.toInteger() + 1
          dockertag = newtag.toInteger()
          env.newtag = dockertag
          docker.withTool('current') {
            dockerImage = docker.build("mans")
          }
        }
      }
    }

    stage('gittag'){
      steps{
        // after build we need to tag, to not get issues with failed pushes to registry
        sh "git tag ${newtag}"
         withCredentials([usernamePassword(credentialsId: 'demo', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
          sh "git push http://${env.GIT_USERNAME}:${env.GIT_PASSWORD}@\$(git config --local remote.origin.url| sed -e 's|http://||') --tags"
         }
      }
    }

    stage('push'){
      steps {
        script {
          docker.withTool('current') {
            docker.withRegistry("http://localhost:30400") {
              dockerImage.push(dockertag.toString())
            }
          }
        }
      }
    }
  }
}